@using AspnetCoreMvcFull.Models.ViewModels
@using AspnetCoreMvcFull.Models
@model IEnumerable<AspnetCoreMvcFull.Models.ComplianceFolder>
@{
	ViewData["Title"] = "Document Repository";
	var stats = ViewBag.Stats;
	var complianceCategories = ViewBag.ComplianceCategories as List<AspnetCoreMvcFull.Models.ComplianceCategory>;
	var currentTenantId = ViewBag.CurrentTenantId as string;

}
<div class="container-fluid">
	<div class="row mb-4">
		<div class="col-md-8">
			<h3 class="display-6">Document Repository</h3>
			<p class="lead text-muted">Manage audit documents and compliance folders</p>
			@if (!string.IsNullOrEmpty(currentTenantId))
			{
				<small class="text-info">Current Tenant: <strong>@currentTenantId</strong></small>
			}
			else
			{
				<small class="text-danger">Current Tenant: (Not Identified)</small>
			}
		</div>
		<div class="col-md-4 text-end">
			<a href="@Url.Action("CreateFolder")" class="btn btn-primary me-2">
				<i class="fas fa-folder-plus"></i> Create Folder
			</a>
		</div>
	</div>

	<div class="row mb-4">
		<div class="col-md-3">
			<div class="card h-100 shadow-sm border-primary">
				<div class="card-body">
					<div class="d-flex justify-content-between">
						<div>
							<h4 class="text-primary">@stats.TotalFolders</h4>
							<p class="mb-0 text-muted">Total Folders</p>
						</div>
						<div class="align-self-center text-primary">
							<i class="fas fa-folder fa-2x"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-3">
			<div class="card h-100 shadow-sm border-success">
				<div class="card-body">
					<div class="d-flex justify-content-between">
						<div>
							<h4 class="text-success">@stats.TotalDocuments</h4>
							<p class="mb-0 text-muted">Documents</p>
						</div>
						<div class="align-self-center text-success">
							<i class="fas fa-file-alt fa-2x"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-3">
			<div class="card h-100 shadow-sm border-warning">
				<div class="card-body">
					<div class="d-flex justify-content-between">
						<div>
							<h4 class="text-warning">@stats.PendingSubmissions</h4>
							<p class="mb-0 text-muted">Pending</p>
						</div>
						<div class="align-self-center text-warning">
							<i class="fas fa-clock fa-2x"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-3">
			<div class="card h-100 shadow-sm border-info">
				<div class="card-body">
					<div class="d-flex justify-content-between">
						<div>
							<h4 class="text-info">@stats.ComplianceRate%</h4>
							<p class="mb-0 text-muted">Compliance Rate</p>
						</div>
						<div class="align-self-center text-info">
							<i class="fas fa-chart-bar fa-2x"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="card mb-4">
		<div class="card-body">
			<form method="get" class="row g-3">
				<div class="col-md-5">
					<div class="input-group">
						<span class="input-group-text"><i class="fas fa-search"></i></span>
						<input type="text" class="form-control" name="searchQuery" value="@ViewBag.SearchQuery" placeholder="Search folders and documents...">
					</div>
				</div>
				<div class="col-md-3">
					<select name="filter" class="form-select">
						<option value="all" selected="@(ViewBag.Filter == "all")">All Categories</option>
						@if (complianceCategories != null)
						{
							foreach (var category in complianceCategories)
							{
								<option value="@category.Id" selected="@(ViewBag.Filter == category.Id.ToString())">
									@category.Name
								</option>
							}
						}
					</select>
				</div>
				<div class="col-md-2">
					<select name="statusFilter" class="form-select">
						<option value="all" selected="@(ViewBag.StatusFilter == "all")">All Statuses</option>
						@foreach (var status in Enum.GetValues(typeof(FolderStatus)))
						{
							<option value="@status.ToString()" selected="@(ViewBag.StatusFilter == status.ToString())">
								@status.ToString()
							</option>
						}
					</select>
				</div>
				<div class="col-md-2">
					<button type="submit" class="btn btn-outline-primary w-100">Filter</button>
				</div>
			</form>
		</div>
	</div>

	@* Bulk Action Form *@
	<div class="card mb-4">
		<div class="card-body">
			<form asp-action="BulkUpdateStatus" method="post" id="bulkActionForm" class="row g-3 align-items-center">
				@Html.AntiForgeryToken()
				<div class="col-auto">
					<div class="form-check">
						<input class="form-check-input" type="checkbox" id="selectAllFolders">
						<label class="form-check-label" for="selectAllFolders">
							Select All
						</label>
					</div>
				</div>
				<div class="col-md-4">
					<label for="newStatus" class="visually-hidden">Change Status To:</label>
					<select name="newStatus" id="newStatus" class="form-select">
						<option value="">Change Status To...</option>
						@foreach (var status in Enum.GetValues(typeof(FolderStatus)))
						{
							<option value="@status.ToString()">@status.ToString()</option>
						}
					</select>
				</div>
				<div class="col-auto">
					<button type="submit" class="btn btn-primary" id="applyBulkAction" disabled>Apply</button>
				</div>
			</form>
		</div>
	</div>


	<div class="row">
		@foreach (var folder in Model)
		{
			var progressPercentage = folder.RequiredDocuments.Any()
			? (folder.RequiredDocuments.Count(rd => rd.IsSubmitted) * 100) / folder.RequiredDocuments.Count()
			: 100;

			<div class="col-md-4 mb-4">
				<div class="card h-100">
					<div class="card-header d-flex justify-content-between align-items-center">
						<h6 class="card-title mb-0">@folder.Name</h6>
						<div class="d-flex align-items-center">
							@* This new div groups the badge and checkbox *@
							<span class="badge bg-secondary me-2">@folder.ComplianceCategory?.Name</span> @* `me-2` adds space between badge and checkbox *@
							<input type="checkbox" name="selectedFolders" value="@folder.Id" class="form-check-input folder-checkbox" />
						</div>
					</div>
					<div class="card-body">
						<p class="card-text text-muted">@(folder.Description ?? "No description")</p>

						<div class="mb-3">
							<div class="d-flex justify-content-between mb-1">
								<small>Progress</small>
								<small>@progressPercentage%</small>
							</div>
							<div class="progress" style="height: 6px;">
								<div class="progress-bar" role="progressbar" style="width: @progressPercentage%"></div>
							</div>
						</div>

						<div class="row text-center">
							<div class="col-4">
								<strong>@folder.Documents.Count</strong><br>
								<small class="text-muted">Documents</small>
							</div>

							<div class="col-4">
								<strong>@folder.RequiredDocuments.Count(rd => !rd.IsSubmitted)</strong><br>
								<small class="text-muted">Pending</small>
							</div>
							<div class="col-4">
								<strong>@folder.Status</strong><br>
								<small class="text-muted">Status</small>
							</div>
						</div>
					</div>
					<div class="card-footer">
						<div class="d-flex align-items-center">
							@* New flex container to align buttons *@
							<div class="btn-group w-100">
								@* View and Edit buttons grouped normally *@
								<a href="@Url.Action("FolderDetails", new { id = folder.Id })" class="btn btn-outline-primary btn-sm">
									<i class="fas fa-eye"></i> View
								</a>
								<a href="@Url.Action("EditFolder", new { Id = folder.Id })" class="btn btn-outline-success btn-sm">
									<i class="fas fa-edit"></i> Edit
								</a>
							</div>

							@if (folder.Status == FolderStatus.Active)
							{
								<form asp-action="ArchiveFolder" asp-route-id="@folder.Id" method="post" onsubmit="return confirm('Are you sure you want to archive this folder?');" class="d-inline ms-1">
									@Html.AntiForgeryToken()
									<button type="submit" class="btn btn-dark btn-sm w-100 shadow-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Archive Folder">
										<i class="fas fa-archive me-1"></i> <small>Archive</small>
									</button>
								</form>
							}
							else if (folder.Status == FolderStatus.Archived)
							{
								<form asp-action="ActivateFolder" asp-route-id="@folder.Id" method="post" onsubmit="return confirm('Are you sure you want to activate this folder?');" class="d-inline ms-1">
									@Html.AntiForgeryToken()
									<button type="submit" class="btn btn-info btn-sm w-100 shadow-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Activate Folder">
										<i class="fas fa-redo me-1"></i> <small>Activate</small>
									</button>
								</form>
							}
						</div>
						<small class="text-muted">Created: @folder.CreatedDate.ToString("MMM dd,yyy")</small>
					</div>
				</div>
			</div>
		}
	</div>

	@if (!Model.Any())
	{
		<div class="text-center py-5">
			<i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
			<h4>No folders found</h4>
			<p class="text-muted">Get started by creating your first compliance folder.</p>
			<a href="@Url.Action("CreateFolder")" class="btn btn-primary">
				<i class="fas fa-folder-plus"></i> Create First Folder
			</a>
		</div>
	}
</div>

@section PageScripts {
	<script>
		// Auto-submit search form on enter
		$('input[name="searchQuery"]').on('keypress', function(e) {
			if (e.which === 13) {
				$(this).closest('form').submit();
			}
		});

		// --- JAVASCRIPT FOR BULK ACTIONS ---
		$(document).ready(function() {
			const selectAllFolders = $('#selectAllFolders');
			const folderCheckboxes = $('.folder-checkbox');
			const applyBulkActionBtn = $('#applyBulkAction');
			const bulkActionForm = $('#bulkActionForm');
			const newStatusSelect = $('#newStatus');

			function toggleApplyButton() {
				const anyChecked = folderCheckboxes.is(':checked');
				const statusSelected = newStatusSelect.val() !== '';
				applyBulkActionBtn.prop('disabled', !(anyChecked && statusSelected));
			}

			selectAllFolders.on('change', function() {
				folderCheckboxes.prop('checked', $(this).prop('checked'));
				toggleApplyButton();
			});

			folderCheckboxes.on('change', function() {
				if (!$(this).prop('checked')) {
					selectAllFolders.prop('checked', false);
				} else if (folderCheckboxes.length === folderCheckboxes.filter(':checked').length) {
					selectAllFolders.prop('checked', true);
				}
				toggleApplyButton();
			});

			newStatusSelect.on('change', toggleApplyButton);

			// Initial check on page load
			toggleApplyButton();

			bulkActionForm.on('submit', function(e) {
				const selectedIds = folderCheckboxes.filter(':checked').map(function() {
					return $(this).val();
				}).get();

				if (selectedIds.length === 0) {
					alert('Please select at least one folder.');
					e.preventDefault();
					return false;
				}

				if (newStatusSelect.val() === '') {
					alert('Please select a status to apply.');
					e.preventDefault();
					return false;
				}

				if (!confirm('Are you sure you want to change the status of ' + selectedIds.length + ' selected folder(s) to ' + newStatusSelect.val() + '?')) {
					e.preventDefault();
					return false;
				}

				// Remove any previously added hidden inputs to prevent duplicates on resubmission
				bulkActionForm.find('input[name="folderIds"]').remove();

				// Add hidden input fields for each selected ID
				selectedIds.forEach(function(id) {
					$('<input>').attr({
						type: 'hidden',
						name: 'folderIds',
						value: id
					}).appendTo(bulkActionForm);
				});
			});

			// Initialize tooltips (important for the new icon-only button)
			var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
			var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
			  return new bootstrap.Tooltip(tooltipTriggerEl)
			})
		});
	</script>
}
