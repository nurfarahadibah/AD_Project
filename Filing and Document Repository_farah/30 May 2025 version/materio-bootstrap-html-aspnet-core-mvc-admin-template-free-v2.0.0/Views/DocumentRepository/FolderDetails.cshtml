@model AspnetCoreMvcFull.Models.ComplianceFolder
@{
	ViewData["Title"] = "Folder Details";
}

<div class="container mt-4">
	<div class="row mb-4">
		<div class="col-md-9">
			<h3 class="display-5">@Model.Name</h3>
			<p class="lead text-muted">Compliance Type: <span class="badge bg-secondary">@Model.ComplianceCategory?.Name</span></p>
			<p><strong>Description:</strong> @(Model.Description ?? "No description provided.")</p>
			<p><strong>Created By:</strong> @Model.CreatedBy on @Model.CreatedDate.ToString("MMM dd,yyyy 'at' hh:mm tt")</p>
			@* --- ADDED START --- *@
			@if (Model.LastModifiedDate.HasValue)
			{
				<p>
					<strong>Last Modified By:</strong> @(Model.LastModifiedBy ?? "N/A") on @Model.LastModifiedDate.Value.ToString("MMM dd,yyyy 'at' hh:mm tt")
				</p>
			}
			@* --- ADDED END --- *@
			<p><strong>Status:</strong> <span class="badge @(Model.Status == AspnetCoreMvcFull.Models.FolderStatus.Completed ? "bg-success" : "bg-warning")">@Model.Status.ToString()</span></p>
		</div>
		<div class="col-md-3 text-end">
			<a href="@Url.Action("UploadDocument", new { folderId = Model.Id })" class="btn btn-primary mb-2">
				<i class="fas fa-upload"></i> Upload General Document
			</a>
			@* --- ADDED START --- *@
			<a href="@Url.Action("EditFolder", new { id = Model.Id })" class="btn btn-warning mb-2">
				<i class="fas fa-edit"></i> Edit Folder
			</a>
			@* --- ADDED END --- *@
			<a href="@Url.Action("Index")" class="btn btn-outline-secondary">
				<i class="fas fa-arrow-left"></i> Back to Folders
			</a>
		</div>
	</div>

	<hr />

	<div class="row">
		<div class="col-md-12">
			<div class="card mb-4">
				<div class="card-header d-flex justify-content-between align-items-center">
					<h5 class="mb-0">Required Documents Checklist</h5>
					<span class="badge bg-info text-dark">
						@Model.RequiredDocuments.Count(rd => !rd.IsSubmitted) pending
					</span>
				</div>
				<ul class="list-group list-group-flush">
					@if (Model.RequiredDocuments != null && Model.RequiredDocuments.Any())
					{
						@foreach (var reqDoc in Model.RequiredDocuments.OrderByDescending(rd => rd.IsSubmitted).ThenBy(rd => rd.DocumentName))
						{
							<li class="list-group-item d-flex justify-content-between align-items-start py-3">
								<div class="me-auto pe-3">
									<h6 class="mb-1">
										<i class="fas @(reqDoc.IsSubmitted ? "fa-check-circle text-success" : "fa-exclamation-circle text-warning") me-2"></i>
										@reqDoc.DocumentName
										@if (reqDoc.IsRequired)
										{
											<span class="badge bg-danger ms-2">Required</span>
										}
									</h6>
									@if (!string.IsNullOrEmpty(reqDoc.Description))
									{
										<p class="text-muted small mb-1">@reqDoc.Description</p>
									}
									@if (reqDoc.IsSubmitted)
									{
										<div class="text-muted small mt-1">
											<i class="fas fa-calendar-alt me-1"></i> Submitted on: @reqDoc.SubmissionDate?.ToString("MMM dd,yyyy 'at' hh:mm tt")
											<br />
											<i class="fas fa-user me-1"></i> Submitted By: @(reqDoc.SubmittedBy ?? "N/A")
										</div>
									}
								</div>
								<div class="d-flex flex-column align-items-end">
									@if (!reqDoc.IsSubmitted)
									{
										<a href="@Url.Action("UploadDocument", new { folderId = Model.Id, requiredDocId = reqDoc.Id })" class="btn btn-outline-primary btn-sm mb-1"
										   title="Upload document for this requirement">
											<i class="fas fa-upload"></i> Upload
										</a>
									}
									else
									{
										<span class="badge bg-success mb-1 py-2 px-3 rounded-pill"><i class="fas fa-check me-1"></i> Submitted</span>
									}

									@if (reqDoc.Documents != null && reqDoc.Documents.Any())
									{
										<button class="btn btn-sm btn-outline-info mt-1" type="button" data-bs-toggle="collapse" data-bs-target="#associatedDocs_@reqDoc.Id" aria-expanded="false" aria-controls="associatedDocs_@reqDoc.Id">
											<i class="fas fa-folder-open"></i> @reqDoc.Documents.Count() Associated
										</button>
									}
								</div>
							</li>
							@* Collapsible section for associated documents *@
							@if (reqDoc.Documents != null && reqDoc.Documents.Any())
							{
								<li class="list-group-item bg-light border-top-0 pt-0">
									<div class="collapse" id="associatedDocs_@reqDoc.Id">
										<small class="text-muted">Associated Documents:</small>
										<ul class="list-unstyled mb-0 mt-1">
											@foreach (var associatedDoc in reqDoc.Documents.OrderByDescending(d => d.UploadDate))
											{
												<li class="d-flex align-items-center mb-1">
													<i class="fas fa-file-alt text-secondary me-2"></i>
													<span class="flex-grow-1">@associatedDoc.FileName</span>
													<a href="@Url.Action("DownloadDocument", new { id = associatedDoc.Id })" class="btn btn-sm btn-outline-info ms-2" data-bs-toggle="tooltip" title="Download this document">
														<i class="fas fa-download"></i>
													</a>
													@* Add a "View" button if you implement an inline viewer *@
													@*
                                                    <a href="#" class="btn btn-sm btn-outline-secondary ms-1" data-bs-toggle="tooltip" title="View Document">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    *@
												</li>
											}
										</ul>
									</div>
								</li>
							}
						}
					}
					else
					{
						<li class="list-group-item text-muted text-center py-4">
							<i class="fas fa-info-circle me-2"></i> No specific required documents for this folder.
						</li>
					}
				</ul>
			</div>
		</div>
	</div>

	<div class="card mb-4">
		<div class="card-header">
			<h5>Uploaded Documents</h5>
		</div>
		<div class="card-body">
			@if (Model.Documents != null && Model.Documents.Any())
			{
				<div class="table-responsive">
					<table class="table table-striped table-hover">
						<thead>
							<tr>
								<th>File Name</th>
								<th>Description</th>
								<th>Uploaded By</th>
								<th>Upload Date</th>
								<th>Size</th>
								<th>Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var doc in Model.Documents.OrderByDescending(d => d.UploadDate))
							{
								<tr>
									<td><i class="fas fa-file me-2"></i> @doc.FileName</td>
									<td>@(doc.Description ?? "N/A")</td>
									<td>@doc.UploadedBy</td>
									<td>@doc.UploadDate.ToString("MMM dd,yyyy")</td>
									<td>@(Math.Round((double)doc.FileSize / 1024 / 1024, 2)) MB</td>
									<td>
										<a href="@Url.Action("DownloadDocument", new { id = doc.Id })" class="btn btn-info btn-sm" data-bs-toggle="tooltip" title="Download">
											<i class="fas fa-download"></i>
										</a>
										@* Add other actions like View/Delete if needed *@
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
			else
			{
				<p class="text-muted text-center">No documents have been uploaded to this folder yet. <a href="@Url.Action("UploadDocument", new { folderId = Model.Id })">Upload one now!</a></p>
			}
		</div>
	</div>
</div>

@* The modal is removed as we are now redirecting to a dedicated UploadDocument page *@
@* <div class="modal fade" id="uploadDocumentModal" tabindex="-1" aria-labelledby="uploadDocumentModalLabel" aria-hidden="true">
    ... (modal content removed)
</div> *@

@section PageScripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		$(function () {
			// Initialize tooltips
			$('[data-bs-toggle="tooltip"]').tooltip();

			// Removed the AJAX modal handling script as we are now navigating to a dedicated page
		});
	</script>
}
