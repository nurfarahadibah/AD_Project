@model AspnetCoreMvcFull.Models.ViewModels.ComplianceCategoryViewModel

@{
	ViewData["Title"] = "Delete Compliance Category";
}

<div class="card">
	<div class="card-header">
		<h5 class="card-title">Delete Compliance Category</h5>
	</div>
	<div class="card-body">
		<h6 class="text-danger">Are you sure you want to delete this Compliance Category?</h6>
		<p class="mb-3">
			<strong>@Html.DisplayNameFor(model => model.Name):</strong> @Html.DisplayFor(model => model.Name)
		</p>
		<p class="mb-3">
			<strong>@Html.DisplayNameFor(model => model.Code):</strong> @Html.DisplayFor(model => model.Code)
		</p>
		<p class="mb-3">
			<strong>@Html.DisplayNameFor(model => model.Description):</strong> @Html.DisplayFor(model => model.Description)
		</p>

		<form asp-action="Delete" id="deleteForm">
			<input type="hidden" asp-for="Id" />
			@* Hidden input to pass ViewBag.CanDelete to JavaScript *@
			<input type="hidden" id="canDeleteHidden" value="@(ViewBag.CanDelete?.ToString().ToLower())" />
			<input type="hidden" id="deleteRestrictionReasonHidden" value="@(ViewBag.DeleteRestrictionReason)" />

			<div class="mt-3">
				@* The delete button is always enabled now, JavaScript will handle the prevention/pop-up *@
				<button type="submit" class="btn btn-danger me-2">Delete</button>
				<a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
			</div>
		</form>
	</div>
</div>

@* Bootstrap Modal for Error Pop-up *@
<div class="modal fade" id="deleteRestrictionModal" tabindex="-1" aria-labelledby="deleteRestrictionModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header bg-white text-white">
				<h5 class="modal-title" id="deleteRestrictionModalLabel">Deletion Restricted</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p id="modalErrorMessage"></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const deleteForm = document.getElementById('deleteForm');
			const canDeleteHidden = document.getElementById('canDeleteHidden');
			const deleteRestrictionReasonHidden = document.getElementById('deleteRestrictionReasonHidden');
			const deleteRestrictionModal = new bootstrap.Modal(document.getElementById('deleteRestrictionModal'));
			const modalErrorMessage = document.getElementById('modalErrorMessage');

			deleteForm.addEventListener('submit', function (event) {
				// Check if the category can be deleted based on the hidden input value
				const canDelete = canDeleteHidden.value === 'true';
				const restrictionReason = deleteRestrictionReasonHidden.value;

				if (!canDelete) {
					event.preventDefault(); // Prevent the form from submitting
					modalErrorMessage.textContent = restrictionReason; // Set the message in the modal
					deleteRestrictionModal.show(); // Show the pop-up modal
				}
				// If canDelete is true, the form will submit normally
			});
		});
	</script>
}
