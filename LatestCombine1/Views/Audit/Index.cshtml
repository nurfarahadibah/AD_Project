@model IEnumerable<AspnetCoreMvcFull.Models.AuditInstance>

@{
    ViewData["Title"] = "Audit Instances";
    var availableForms = ViewData["AvailableForms"] as List<AspnetCoreMvcFull.Models.JenisForm>;
}

@* Vendor Styles should match the DataTables version used in the script below *@
@section VendorStyles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
    @* If you still need Bootstrap 5 specific DataTables styling, you can keep the line below,
       but the example uses the default DataTables styling. For consistency with the Compliance
       Categories table, I've primarily used the default DataTables CSS. *@
    @* <link rel="stylesheet" href="https://cdn.datatables.net/2.0.8/css/dataTables.bootstrap5.css" /> *@
}

<div class="card shadow-sm rounded-3">
    <div class="card-header d-flex justify-content-between align-items-center bg-light py-3">
        <h5 class="card-title fw-bold text-dark mb-0">Audit Records</h5>
        @if (ViewBag.IsUser != null && (bool)ViewBag.IsUser)
        {
            <a asp-controller="Audit" asp-action="ListFormTemplates" class="btn btn-primary shadow-sm">
                <i class="fas fa-plus-circle me-2"></i> Start New Audit
            </a>
        }
    </div>
    <div class="card-body p-4">
        @if (!Model.Any())
        {
            <div class="alert alert-info" role="alert">
                No audit record have been recorded yet for your organization.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table id="auditInstancesTable" class="table table-striped table-hover w-100">
                    <thead>
                        <tr>
                            <th>Audit ID</th> @* NEW COLUMN *@
                            <th>@Html.DisplayNameFor(model => model.AuditDate)</th>
                            <th>@Html.DisplayNameFor(model => model.FormName)</th>
                            @*<th>Branch</th> NEW COLUMN (assuming BranchName property) *@
                            <th>Status</th> @* NEW COLUMN (assuming Status property) *@
                            <th>Current Score %</th> @* Adjusted for brevity *@
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.AuditInstanceId)</td> @* Display Audit ID *@
                                @* Assuming AuditDate is DateTime, format it similarly to CreatedDate example *@
                                <td>@item.AuditDate.ToString("MMM dd,yyyy HH:mm")</td>
                                <td>@Html.DisplayFor(modelItem => item.FormName)</td>
                                @*<td>@Html.DisplayFor(modelItem => item.BranchName)</td> @* Display Branch Name *@
                                <td>
                                    @{
                                        // Display status with a badge for better visibility
                                        string badgeClass = "";
                                        switch (item.Status)
                                        {
                                            case AspnetCoreMvcFull.Models.AuditStatus.Completed:
                                                badgeClass = "bg-success";
                                                break;
                                            case AspnetCoreMvcFull.Models.AuditStatus.Draft:
                                                badgeClass = "bg-secondary";
                                                break;
                                            case AspnetCoreMvcFull.Models.AuditStatus.NeedsCorrectiveAction:
                                                badgeClass = "bg-warning text-dark";
                                                break;
                                            case AspnetCoreMvcFull.Models.AuditStatus.NeedsFollowUp:
                                                badgeClass = "bg-info text-dark";
                                                break;
                                            default:
                                                badgeClass = "bg-light text-dark";
                                                break;
                                        }
                                    }
                                    <span class="badge @badgeClass">@item.Status.ToString()</span>
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.PercentageScore)%</td>
                                <td class="text-center">
                                    <div class="dropdown d-inline-block">
                                        @* Use d-inline-block to avoid breaking alignment *@
                                        <a href="#" class="btn btn-sm btn-outline-secondary dropdown-toggle" role="button" id="dropdownMenuLink_@item.AuditInstanceId" data-bs-toggle="dropdown" aria-expanded="false" title="Actions">
                                            <i class="fas fa-ellipsis-v"></i> @* Changed icon for dropdown trigger *@
                                        </a>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink_@item.AuditInstanceId">
                                            <li><a class="dropdown-item" asp-controller="Audit" asp-action="Details" asp-route-id="@item.AuditInstanceId">View Details</a></li>
                                            @* Pointing "Corrective Action" to your dedicated AddCorrectiveActions action *@
                                            <li><a class="dropdown-item" asp-controller="Audit" asp-action="AddCorrectiveActions" asp-route-auditInstanceId="@item.AuditInstanceId">Corrective Action</a></li>
                                            <li><a class="dropdown-item" asp-controller="Audit" asp-action="FollowUpAudit" asp-route-auditInstanceId="@item.AuditInstanceId">Follow Up Audit</a></li>
                                            <li><hr class="dropdown-divider"></li> @* Separator *@
                                            <li><a class="dropdown-item" asp-controller="Audit" asp-action="Edit" asp-route-id="@item.AuditInstanceId">Edit</a></li>
                                            <li><a class="dropdown-item text-danger" asp-controller="Audit" asp-action="Archive" asp-route-id="@item.AuditInstanceId">Delete</a></li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@section PageScripts {
    @* jQuery is a prerequisite for DataTables *@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    @* Datatables JS (matching the version in your Compliance Categories example) *@
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize DataTables
            $('#auditInstancesTable').DataTable({
                "paging": true,        // Enable pagination
                "searching": true,     // Enable search box
                "ordering": true,      // Enable sorting on columns
                "info": true,          // Display info about the table
                "lengthChange": true,  // Allow changing number of entries per page
                "pageLength": 10       // Default number of entries per page
            });
        });
    </script>

    <partial name="_ValidationScriptsPartial" />
}
